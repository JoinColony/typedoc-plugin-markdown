// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generics: should compile class with type params 1`] = `
"[breadcrumbs]

# Class: ClassWithTypeParams<T, V\\\\>

Comments for typeParams

## Type parameters

| Name | Description |
| :------ | :------ |
| \`T\` | Some type param |
| \`V\` | Some other type param |

[toc]

[groups]
"
`;

exports[`Generics: should compile function with a simple type param' 1`] = `
"▸ \`Const\` **functionWithTypeParam**<\`A\`\\\\>(): \`boolean\`

#### Type parameters

| Name |
| :------ |
| \`A\` |

#### Returns

\`boolean\`

[sources]
"
`;

exports[`Generics: should compile function with complex type params' 1`] = `
"▸ \`Const\` **functionWithTypeParams**<\`A\`, \`B\`, \`C\`\\\\>(): \`boolean\`

#### Type parameters

| Name | Type | Description |
| :------ | :------ | :------ |
| \`A\` | extends [\`ClassWithTypeParams\`]([urlTo])<\`string\`, \`number\`, \`A\`\\\\> | Comment for type \`A\` |
| \`B\` | \`string\` \\\\| \`boolean\` | Comment for type \`B\` |
| \`C\` | \`string\` | - |

#### Returns

\`boolean\`

[sources]
"
`;

exports[`Generics: should compile generics with defaults' 1`] = `
"• **genericsWithDefaults**()

[sources]
"
`;

exports[`Generics: should compile type with nested generics' 1`] = `
"Ƭ **nestedGenerics**(): [\`Generic1\`]([urlTo])<[\`Generic2\`]([urlTo])<[\`Generic3\`]([urlTo])<\`string\`\\\\>\\\\>\\\\>

#### Returns

[\`Generic1\`]([urlTo])<[\`Generic2\`]([urlTo])<[\`Generic3\`]([urlTo])<\`string\`\\\\>\\\\>\\\\>

[sources]
"
`;
