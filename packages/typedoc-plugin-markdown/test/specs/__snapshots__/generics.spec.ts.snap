// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generics: should compile class with type params 1`] = `
"[breadcrumbs]

# Class: ClassWithTypeParams<T, V\\\\>

Comments for typeParams

## Type parameters

| Name | Description |
| :------ | :------ |
| \`T\` | Some type param |
| \`V\` | Some other type param |

[helper: toc]

[groups]
"
`;

exports[`Generics: should compile function with a simple type param' 1`] = `
"▸ **functionWithTypeParam**<\`A\`\\\\>(): \`boolean\`

#### Type parameters

| Name |
| :------ |
| \`A\` |

#### Returns

\`boolean\`

[sources]
"
`;

exports[`Generics: should compile function with complex type params' 1`] = `
"▸ **functionWithTypeParams**<\`A\`, \`B\`, \`C\`\\\\>(): \`boolean\`

#### Type parameters

| Name | Type | Description |
| :------ | :------ | :------ |
| \`A\` | extends [\`ClassWithTypeParams\`](ClassWithTypeParams.md)<\`string\`, \`number\`, \`A\`\\\\> | Comment for type \`A\` |
| \`B\` | \`string\` \\\\| \`boolean\` | Comment for type \`B\` |
| \`C\` | \`string\` | - |

#### Returns

\`boolean\`

[sources]
"
`;

exports[`Generics: should compile generics with defaults' 1`] = `
"• **genericsWithDefaults**()

[sources]
"
`;

exports[`Generics: should compile type with nested generics' 1`] = `
"Ƭ **nestedGenerics**(): [\`Generic1\`](../modules.md#generic1)<[\`Generic2\`](../modules.md#generic2)<[\`Generic3\`](../modules.md#generic3)<\`string\`\\\\>\\\\>\\\\>

#### Returns

[\`Generic1\`](../modules.md#generic1)<[\`Generic2\`](../modules.md#generic2)<[\`Generic3\`](../modules.md#generic3)<\`string\`\\\\>\\\\>\\\\>

[sources]
"
`;
